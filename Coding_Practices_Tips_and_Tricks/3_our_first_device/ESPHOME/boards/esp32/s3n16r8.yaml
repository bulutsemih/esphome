################################################################################
# Generic ESP32 S3 N16R8
################################################################################
# Usage:
#   Add the following code to package section in the device file
# ------------------------------------------------------------------------------
# packages:
#   board: !include common/esp32/s3n16r8.yaml
# ------------------------------------------------------------------------------
# Author: Pascal Parent
# Company: Home Automator (ZA)
# Web: https://www.youtube.com/@homeautomatorza
# Version: 1.0.0
# Licence: CCO 1.0 https://creativecommons.org/publicdomain/zero/1.0/
# ------------------------------------------------------------------------------
# Notes: 
#       - Work in progress
#       - There are more configs for spesific molels in the 
#         custom_packages/peripherals folder.
# Referance: 
# Spec: 
#     - Xtensa dual-core 32-bit LX7 microprocessor @ 240 MHz
#     - 2.4 GHz Wi­Fi (802.11 b/g/n)
#     - Bluetooth 5, LE, Mesh
#     - 16 MB Flash
#     - 384 KB ROM
#     - 512 KB SRAM
#     - 8 MB PSRAM
#     - 2 × I2C
#     - 2 × I2S
#     - 2 x SPI
#     - 3 x UART
#     - 2 × 12-bit ADC (20 Channels)
#     - Temperature sensor
#     - RGB LED 
#     - 1x LCD Interface (8 - 16 bit)
# ------------------------------------------------------------------------------
# WARNING:
# This code carries a "It works on my setup" disclaimer!
# Meaning that it works on my setup but it may not work on yours.
# Use at your own risks!
################################################################################
esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf
    version: 5.2.1 
    platform_version: 6.6.0 
    sdkconfig_options:
      CONFIG_OPENTHREAD_ENABLED: n      # Disable Thread!
      CONFIG_ENABLE_WIFI_STATION: y     # Ensures the WiFi is up
      CONFIG_USE_MINIMAL_MDNS: y
  flash_size: 16MB

esphome: 
  platformio_options:
    build_flags: "-DBOARD_HAS_PSRAM"
    board_build.arduino.memory_type: qio_opi

# PSRAM
psram:
  mode: octal
  speed: 80MHz

# RGB LED - GPIO 48


# I2C settings
i2c:
  - id: ${device_internal_name}_i2c_bus0
    sda: GPIO8
    scl: GPIO9
    scan: true

# UART
uart:
  - id: ${device_internal_name}_uart_bus0
    tx_pin: GPIO43
    rx_pin: GPIO44
    baud_rate: 256000
    parity: NONE
    stop_bits: 1

# SPI
spi:
  id: ${device_internal_name}_spi_bus0
  clk_pin: GPIO13
  mosi_pin: GPIO11
  miso_pin: GPIO12
  interface: hardware

# Sensors
sensor:
  # Internal Temperature Sensor
  - platform: internal_temperature
    id: ${device_internal_name}_internal_temperature
    name: Internal Temperature 
    icon: mdi:coolant-temperature
    unit_of_measurement: °C
    device_class: temperature
    update_interval: ${device_sampling_time}
    disabled_by_default: true
  
  - platform: template
    id: ${device_internal_name}_internal_temperature_f
    name: Internal Temperature (F)
    icon: mdi:coolant-temperature
    unit_of_measurement: °F
    lambda: return id(${device_internal_name}_internal_temperature).state * 9/5+32;
    device_class: temperature
    update_interval: ${device_sampling_time}
    entity_category: diagnostic
    disabled_by_default: true


